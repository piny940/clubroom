name: Test
on: [push]
jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      redis:
        image: redis:alpine
        options: --health-cmd "redis-cli -h localhost ping" --health-interval 10s --health-timeout 5s --health-retries 15
    container:
      image: ruby:3.1.2
      env:
        RAILS_ENV: test
        DATABASE_HOST: postgres
        TEST_PG_USER: postgres
        TEST_PG_PASSWORD: postgres
        TEST_PG_HOST: postgres
        REDIS_URL: redis://redis:6379/1

    steps:
      - uses: actions/checkout@v2
      - name: Cache bundle gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-${{ env.cache-name }}-
            ${{ runner.os }}-gem-
            ${{ runner.os }}-
      - name: Install Bundler
        run: gem install bundler --no-document -v $(grep "BUNDLED WITH" -1 Gemfile.lock | tail -n 1)
        working-directory: ./backend
      - name: Bundle install
        run: bundle install --jobs 4 --retry 3
        working-directory: ./backend
      - name: DB setup
        run: bundle exec rails db:setup
        working-directory: ./backend
      - name: Run rails test
        run: if (bundle exec rails test) | grep -E "(FAIL|ERROR)"; then exit 1; fi
        working-directory: ./backend
      - name: Run rubocop
        run: if (bundle exec rubocop -A) | grep -E "(corrected|\ W:\ )"; then exit 1; fi
        working-directory: ./backend
  
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm キャッシュファイルは Linux/macOS の「~/.npm」に保存される
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Yarn install
        run: yarn --cwd frontend install
      - name: Yarn test
        run: if yarn --cwd frontend test |& grep FAIL; then exit 1; fi
      - name: Prettier && ESLint
        run: if yarn --cwd frontend lint-check |& grep -E "(error|warn)"; then exit 1; fi
